// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesHobbyProject.Models;

namespace MoviesHobbyProject.Migrations
{
    [DbContext(typeof(MemberMoviesContext))]
    partial class MemberMoviesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesHobbyProject.Models.GroupMembers", b =>
                {
                    b.Property<int>("GroupMembersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavMovieReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberBio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupMembersID");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            GroupMembersID = 1,
                            FavMovieReason = "This is an old movie I used to watch with my mother when I was young. I enjoy the subtle and silly humor of it. I don't watch it often, but I don't typically re-watch movies and always enjoy watching this one.",
                            FirstName = "Alainna",
                            LastName = "Nichols",
                            MemberBio = "I am a third-year student at University of Cincinnati, majoring in Information Technology with a concentration in Software Development. I am a full-time UX Development and Design Specialist for LexisNexis. I don't have a lot of time for hobbies, but when I do, it is usually watching TV/movies or drawing and painting."
                        },
                        new
                        {
                            GroupMembersID = 2,
                            FavMovieReason = "I’ve watched this movie a million times and still love it. The concepts are deep, the way it is shot and written is unique and fun, and the soundtrack is one of the best that I can think of.",
                            FirstName = "Martin",
                            LastName = "Dietel",
                            MemberBio = "I am a 33-year-old male third year student at the University of Cincinnati completing my Bachelors in IT with a concentration on software development. I love to bike, hike, watch movies and shows, listen to music, and a bit of gaming from time to time."
                        },
                        new
                        {
                            GroupMembersID = 3,
                            FavMovieReason = "It’s a classic. I grew up watching Finding Nemo and other Disney/Pixar movies and it is my favorite out of all of them. It always brings me a sense of nostalgia every time I watch it.",
                            FirstName = "Saleem",
                            LastName = "Dweik",
                            MemberBio = "I am a third-year student here at the University of Cincinnati, pursuing a degree in IT and in the software development track. I have many hobbies such as hiking, fishing, and woodworking."
                        },
                        new
                        {
                            GroupMembersID = 4,
                            FavMovieReason = "I love horror musicals. The movie is gory and dark. It sort of reminds me of the kind of dark humor that Shakespeare wrote, nobody wins at the end.",
                            FirstName = "Danielle",
                            LastName = "Maddux",
                            MemberBio = "I am a 34-year-old female who enjoys many things from video games and tabletop games to athletics such as Martial Arts and skateboarding."
                        },
                        new
                        {
                            GroupMembersID = 5,
                            FavMovieReason = "I love this movie because of the unique way it portrays its characters. It had my interest from the moment it started and led me to think about things in a new perspective.",
                            FirstName = "Vismaya",
                            LastName = "Manchaiah",
                            MemberBio = "I am a third-year student at UC majoring in Information Technology and am also working towards my MBA. Some of my hobbies include playing the piano, hiking, and watching movies."
                        });
                });

            modelBuilder.Entity("MoviesHobbyProject.Models.MovieFavorites", b =>
                {
                    b.Property<int>("MovieFavoritesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupMembersID")
                        .HasColumnType("int");

                    b.Property<bool>("IsMovie")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SavedMoviesID")
                        .HasColumnType("int");

                    b.HasKey("MovieFavoritesID");

                    b.HasIndex("GroupMembersID");

                    b.HasIndex("SavedMoviesID");

                    b.ToTable("Favorites");

                    b.HasData(
                        new
                        {
                            MovieFavoritesID = 1,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 3,
                            SavedMoviesID = 1
                        },
                        new
                        {
                            MovieFavoritesID = 2,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 4,
                            SavedMoviesID = 2
                        },
                        new
                        {
                            MovieFavoritesID = 3,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 4,
                            SavedMoviesID = 3
                        },
                        new
                        {
                            MovieFavoritesID = 4,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 4,
                            SavedMoviesID = 4
                        },
                        new
                        {
                            MovieFavoritesID = 5,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 3,
                            SavedMoviesID = 5
                        },
                        new
                        {
                            MovieFavoritesID = 6,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 4,
                            SavedMoviesID = 6
                        },
                        new
                        {
                            MovieFavoritesID = 7,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 4,
                            SavedMoviesID = 7
                        },
                        new
                        {
                            MovieFavoritesID = 8,
                            GroupMembersID = 1,
                            IsMovie = true,
                            Rating = 5,
                            SavedMoviesID = 8
                        },
                        new
                        {
                            MovieFavoritesID = 9,
                            GroupMembersID = 2,
                            IsMovie = true,
                            Rating = 5,
                            SavedMoviesID = 9
                        },
                        new
                        {
                            MovieFavoritesID = 10,
                            GroupMembersID = 3,
                            IsMovie = true,
                            Rating = 5,
                            SavedMoviesID = 10
                        },
                        new
                        {
                            MovieFavoritesID = 11,
                            GroupMembersID = 4,
                            IsMovie = true,
                            Rating = 5,
                            SavedMoviesID = 11
                        },
                        new
                        {
                            MovieFavoritesID = 12,
                            GroupMembersID = 5,
                            IsMovie = true,
                            Rating = 5,
                            SavedMoviesID = 12
                        });
                });

            modelBuilder.Entity("MoviesHobbyProject.Models.SavedMovies", b =>
                {
                    b.Property<int>("SavedMoviesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("APIReferenceID")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SavedMoviesID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            SavedMoviesID = 1,
                            APIReferenceID = 8587,
                            MovieName = "The Lion King"
                        },
                        new
                        {
                            SavedMoviesID = 2,
                            APIReferenceID = 1726,
                            MovieName = "Iron Man"
                        },
                        new
                        {
                            SavedMoviesID = 3,
                            APIReferenceID = 10138,
                            MovieName = "Iron Man 2"
                        },
                        new
                        {
                            SavedMoviesID = 4,
                            APIReferenceID = 68721,
                            MovieName = "Iron Man 3"
                        },
                        new
                        {
                            SavedMoviesID = 5,
                            APIReferenceID = 136799,
                            MovieName = "Trolls"
                        },
                        new
                        {
                            SavedMoviesID = 6,
                            APIReferenceID = 10020,
                            MovieName = "Beauty and the Beast"
                        },
                        new
                        {
                            SavedMoviesID = 7,
                            APIReferenceID = 812,
                            MovieName = "Aladdin"
                        },
                        new
                        {
                            SavedMoviesID = 8,
                            APIReferenceID = 2493,
                            MovieName = "The Princess Bride"
                        },
                        new
                        {
                            SavedMoviesID = 9,
                            APIReferenceID = 141,
                            MovieName = "Donnie Darko"
                        },
                        new
                        {
                            SavedMoviesID = 10,
                            APIReferenceID = 12,
                            MovieName = "Finding Nemo"
                        },
                        new
                        {
                            SavedMoviesID = 11,
                            APIReferenceID = 14353,
                            MovieName = "Repo! The Genetic Opera"
                        },
                        new
                        {
                            SavedMoviesID = 12,
                            APIReferenceID = 550,
                            MovieName = "Fight Club"
                        });
                });

            modelBuilder.Entity("MoviesHobbyProject.Models.MovieFavorites", b =>
                {
                    b.HasOne("MoviesHobbyProject.Models.GroupMembers", "GroupMember")
                        .WithMany()
                        .HasForeignKey("GroupMembersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesHobbyProject.Models.SavedMovies", "MovieInfo")
                        .WithMany()
                        .HasForeignKey("SavedMoviesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
